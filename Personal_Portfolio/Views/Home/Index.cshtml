@using Personal_Portfolio.ViewModel
@using Entities.Concrate
@model HomeVM
@{
	ViewData["Title"] = "Index";
	Layout = "~/Views/Shared/_Layout.cshtml";
}
<section id="hero" class="section hero w-100">
	@await Component.InvokeAsync("Feature")
</section>

<section id="about" class="section about">
	<div class="container">
		@await Component.InvokeAsync("About")
		<!--  Count up  -->
		<div id="count-up" class="count-up text-center box-border">
			<div class="row">
				<!-- Item-01 -->
				<div class="col-6 col-lg-3 my-4 count-item">
					<div class="count-icon">
						<i class="bi bi-palette"></i>
					</div>
					<span class="timer count-number" data-from="0" data-to="286" data-speed="5000">0</span>
					<p class="mb-0">Logo Design</p>
				</div>
				<!-- Item-02 -->
				<div class="col-6 col-lg-3 my-4 count-item">
					<div class="count-icon">
						<i class="bi bi-laptop"></i>
					</div>
					<span class="timer count-number" data-from="0" data-to="6549" data-speed="5000">0</span>
					<p class="mb-0">Web Design</p>
				</div>
				<!-- Item-03 -->
				<div class="col-6 col-lg-3 my-4 count-item">
					<div class="count-icon">
						<i class="bi bi-award"></i>
					</div>
					<span class="timer count-number" data-from="0" data-to="793" data-speed="5000">0</span>
					<p class="mb-0">Illustration</p>
				</div>
				<!-- Item-04 -->
				<div class="col-6 col-lg-3 my-4 count-item">
					<div class="count-icon">
						<i class="bi bi-journal-check"></i>
					</div>
					<span class="timer count-number" data-from="0" data-to="286" data-speed="5000">0</span>
					<p class="mb-0">Project Done</p>
				</div>
			</div>
		</div>

		<!--  Skillbar  -->
		<div class="row mt-5 skills">
			@await Component.InvokeAsync("Skill")
			@await Component.InvokeAsync("Language")

		</div>
		<!--  Client  -->

	</div>
</section>
<!--  About End  -->
<!--  Resume Start  -->
<section id="resume" class="section">
	<div class="container">
		<!-- Servises -->
		<div class="services  mb-6">
			@await Component.InvokeAsync("Service")

		</div>
		<!--  Resume  -->
		<div class="resume">
			<!--  TimeLine Education  -->
			@await Component.InvokeAsync("Education")
			<!--  TimeLine Experience  -->
			@await Component.InvokeAsync("Experience")

		</div>
	</div>
</section>
<!--  Resume End  -->
<!--  Portfolio Start  -->
<section id="portfolio" class="section portfolio">
	<div class="container">
		<div class="heading-meta-container">
			<h2 class="heading-title">Portfolio</h2>
			<h6 class="description">See My Ausome Work</h6>
		</div>
		<div class="row">
			<!--   Portfolio Filters   -->
			<ul id="portfolio-filter" class="list-inline col-lg-12 portfolio-filter text-center">
				<li class="list-inline-item">
					<a href="javascript:void(0)" data-filter="*" class="active">All</a>
				</li>
				@foreach (Category item in Model.Categories)
				{

					<li class="list-inline-item">
						<a href="javascript:void(0)" data-filter=".@item.Name.ToLower().Trim()">@item.Name</a>
					</li>
				}
@*				<li class="list-inline-item">
					<a href="javascript:void(0)" data-filter=".mobiledesign">Mobile Design</a>
				</li>
				<li class="list-inline-item">
					<a href="javascript:void(0)" data-filter=".sound">Sound</a>
				</li>
				<li class="list-inline-item">
					<a href="javascript:void(0)" data-filter=".graphic">Graphic</a>
				</li>*@
			</ul>
		</div>

		@await Component.InvokeAsync("Portfolio")
	</div>
</section>

<!--  Portfolio End  -->